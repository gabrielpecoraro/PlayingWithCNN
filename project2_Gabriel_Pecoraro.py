{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9956170,"sourceType":"datasetVersion","datasetId":6123332},{"sourceId":9956212,"sourceType":"datasetVersion","datasetId":6123361}],"dockerImageVersionId":30788,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"%matplotlib inline\nimport os\nimport numpy as np\nimport pickle\nimport matplotlib.pyplot as plt\n\nfrom keras.utils import to_categorical\nfrom keras.callbacks import ReduceLROnPlateau, ModelCheckpoint, EarlyStopping\nfrom keras.optimizers import Adadelta, Adam, SGD\nfrom keras.layers import Input, Conv2D, Dense, MaxPooling2D, Dropout, Flatten, AveragePooling2D, Conv2DTranspose, UpSampling2D, BatchNormalization, RandomFlip, RandomZoom, RandomContrast, RandomBrightness, RandomCrop, RandomTranslation\nfrom keras.models import Sequential\nfrom keras.losses import categorical_crossentropy","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-11-21T22:16:15.036829Z","iopub.execute_input":"2024-11-21T22:16:15.037534Z","iopub.status.idle":"2024-11-21T22:16:15.043945Z","shell.execute_reply.started":"2024-11-21T22:16:15.037499Z","shell.execute_reply":"2024-11-21T22:16:15.043006Z"},"trusted":true},"outputs":[],"execution_count":42},{"cell_type":"markdown","source":"# **Loading Data**","metadata":{}},{"cell_type":"code","source":"data = np.load('/kaggle/input/mnist-corrnoise-npz/MNIST_CorrNoise.npz')\n\nx_train = data['x_train']\ny_train = data['y_train']\n\nnum_cls = len(np.unique(y_train))\nprint('Number of classes: ' + str(num_cls))\n\nprint('Example of handwritten digit with correlated noise: \\n')\n\nk = 3000\nplt.imshow(np.squeeze(x_train[k,:,:]))\nplt.show()\nprint('Class: '+str(y_train[k])+'\\n')\n\n# RESHAPE and standarize\nx_train = np.expand_dims(x_train/255,axis=3)\n\n# convert class vectors to binary class matrices\ny_train = to_categorical(y_train, num_cls)\n\nprint('Shape of x_train: '+str(x_train.shape))\nprint('Shape of y_train: '+str(y_train.shape))","metadata":{"execution":{"iopub.status.busy":"2024-11-21T19:48:47.302998Z","iopub.execute_input":"2024-11-21T19:48:47.303456Z","iopub.status.idle":"2024-11-21T19:48:51.399100Z","shell.execute_reply.started":"2024-11-21T19:48:47.303428Z","shell.execute_reply":"2024-11-21T19:48:51.398251Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Number of classes: 10\nExample of handwritten digit with correlated noise: \n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"Class: 9\n\nShape of x_train: (60000, 28, 28, 1)\nShape of y_train: (60000, 10)\n","output_type":"stream"}],"execution_count":3},{"cell_type":"markdown","source":"# Training classic CNN","metadata":{}},{"cell_type":"code","source":"model_name='CNN' # To compare models, you can give them different names\n\npweight='/kaggle/working/weights_' + model_name  + '.keras'\n\nif not os.path.exists('/kaggle/input/weights'):\n  print(\"Does Not exists\")\n  os.mkdir('./weights')\n\n## EXPLORE VALUES AND FIND A GOOD SET\nb_size = 64 # batch size\nval_split = 0.2 # percentage of samples used for validation (e.g. 0.5)\nep = 20 # number of epochs","metadata":{"execution":{"iopub.status.busy":"2024-11-21T19:48:51.400297Z","iopub.execute_input":"2024-11-21T19:48:51.400653Z","iopub.status.idle":"2024-11-21T19:48:51.406332Z","shell.execute_reply.started":"2024-11-21T19:48:51.400614Z","shell.execute_reply":"2024-11-21T19:48:51.405422Z"},"trusted":true},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"## Train the model","metadata":{}},{"cell_type":"markdown","source":"# Param for My Model","metadata":{}},{"cell_type":"code","source":"model_name='CNN' # To compare models, you can give them different names\n\npweight='/kaggle/working/weights_' + model_name  + '.keras'\n\nif not os.path.exists('/kaggle/input/weights'):\n  print(\"Does Not exists\")\n  os.mkdir('./weights')\n\n## EXPLORE VALUES AND FIND A GOOD SET\nb_size = 128 # batch size\nval_split = 0.1 # percentage of samples used for validation (e.g. 0.5)\nep = 120 # number of epochs","metadata":{"execution":{"iopub.status.busy":"2024-11-22T00:30:19.490951Z","iopub.execute_input":"2024-11-22T00:30:19.491287Z","iopub.status.idle":"2024-11-22T00:30:19.497169Z","shell.execute_reply.started":"2024-11-22T00:30:19.491258Z","shell.execute_reply":"2024-11-22T00:30:19.496165Z"},"trusted":true},"outputs":[],"execution_count":81},{"cell_type":"code","source":"\n# Setting Input\ninput_shape = x_train.shape[1:4] #(28,28,1)\n\n# Set input shape and number of classes\ninput_shape = (28, 28, 1)  # Grayscale 28x28 images\nnum_classes = 10        \n\n# Model Definition\nmodel = Sequential()\n\n# Data Augmnetation\nmodel.add(RandomZoom(height_factor=0.1, width_factor=0.1))\n\n# 1st Layer\nmodel.add(Conv2D(64, kernel_size=(3,3), padding=\"same\", input_shape=input_shape,activation=\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, kernel_size=(3,3), padding=\"same\", activation=\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D((2, 2)))\nmodel.add(Dropout(0.2))\n\n# 2nd Layer\nmodel.add(Conv2D(64, kernel_size=(3,3), padding=\"same\", activation=\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, kernel_size=(3,3), padding=\"same\", activation=\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D((2, 2)))\nmodel.add(Dropout(0.2))\n\n#3rd Layer\nmodel.add(Conv2D(128, kernel_size=(3,3), padding=\"same\", activation=\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(128, kernel_size=(3,3), padding=\"same\", activation=\"relu\"))\nmodel.add(Dropout(0.2))\n\n# Flattening Layer\nmodel.add(Flatten())\n\n# Fully Connected Layer\nmodel.add(Dropout(0.5))\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dense(100, activation='relu'))\nmodel.add(Dense(10, activation='softmax'))\n \n\npweight = '/kaggle/working/weights_CNN.keras'\n# CheckPointer\ncheckpointer = ModelCheckpoint(filepath=pweight, verbose=1, save_best_only=True)\n# Early Stopping\nearly_loss = EarlyStopping(monitor = \"val_loss\", patience = 30, start_from_epoch = 50, mode=\"min\", verbose=1)\n# Reduce Learning Rate\nreduce_lr = ReduceLROnPlateau(monitor = \"val_loss\", patience = 7,  mode = \"min\", verbose=1, factor=0.15)\n\n# Callback List\ncallbacks_list = [checkpointer, early_loss, reduce_lr] \n\n# Compiling model\nmodel.compile(loss=categorical_crossentropy,\n              optimizer=Adam(), \n              metrics=['accuracy'])\n\n# Fitting model\nhistory=model.fit(x_train, y_train,\n                        epochs=ep,\n                        batch_size=b_size,\n                        verbose=1,\n                        shuffle=True,\n                        validation_split = val_split,\n                        callbacks=callbacks_list)\n\n\nprint('CNN weights saved in ' + pweight)\n\n# Plot loss vs epochs\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'val'], loc='upper right')\nplt.show()\n\n# Plot accuracy vs epochs\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'val'], loc='upper left')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-11-22T00:48:35.157448Z","iopub.execute_input":"2024-11-22T00:48:35.157806Z","iopub.status.idle":"2024-11-22T01:02:20.123522Z","shell.execute_reply.started":"2024-11-22T00:48:35.157774Z","shell.execute_reply":"2024-11-22T01:02:20.122683Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Epoch 1/120\n","output_type":"stream"},{"name":"stderr","text":"2024-11-22 00:48:39.935304: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inStatefulPartitionedCall/sequential_56_1/dropout_160_1/stateless_dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.4748 - loss: 1.4867\nEpoch 1: val_loss improved from inf to 0.53973, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 24ms/step - accuracy: 0.4757 - loss: 1.4844 - val_accuracy: 0.8412 - val_loss: 0.5397 - learning_rate: 0.0010\nEpoch 2/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.8343 - loss: 0.4910\nEpoch 2: val_loss improved from 0.53973 to 0.29610, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.8343 - loss: 0.4909 - val_accuracy: 0.8968 - val_loss: 0.2961 - learning_rate: 0.0010\nEpoch 3/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.8730 - loss: 0.3786\nEpoch 3: val_loss improved from 0.29610 to 0.24176, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.8730 - loss: 0.3786 - val_accuracy: 0.9187 - val_loss: 0.2418 - learning_rate: 0.0010\nEpoch 4/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.8889 - loss: 0.3316\nEpoch 4: val_loss improved from 0.24176 to 0.22739, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.8889 - loss: 0.3316 - val_accuracy: 0.9203 - val_loss: 0.2274 - learning_rate: 0.0010\nEpoch 5/120\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9000 - loss: 0.2968\nEpoch 5: val_loss improved from 0.22739 to 0.22516, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9000 - loss: 0.2968 - val_accuracy: 0.9272 - val_loss: 0.2252 - learning_rate: 0.0010\nEpoch 6/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9127 - loss: 0.2628\nEpoch 6: val_loss did not improve from 0.22516\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9127 - loss: 0.2629 - val_accuracy: 0.9162 - val_loss: 0.2473 - learning_rate: 0.0010\nEpoch 7/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9143 - loss: 0.2512\nEpoch 7: val_loss improved from 0.22516 to 0.22245, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9143 - loss: 0.2512 - val_accuracy: 0.9270 - val_loss: 0.2224 - learning_rate: 0.0010\nEpoch 8/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9233 - loss: 0.2301\nEpoch 8: val_loss improved from 0.22245 to 0.19699, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 24ms/step - accuracy: 0.9233 - loss: 0.2302 - val_accuracy: 0.9348 - val_loss: 0.1970 - learning_rate: 0.0010\nEpoch 9/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9206 - loss: 0.2254\nEpoch 9: val_loss did not improve from 0.19699\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9206 - loss: 0.2254 - val_accuracy: 0.9340 - val_loss: 0.2026 - learning_rate: 0.0010\nEpoch 10/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9285 - loss: 0.2116\nEpoch 10: val_loss did not improve from 0.19699\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9285 - loss: 0.2116 - val_accuracy: 0.9357 - val_loss: 0.1997 - learning_rate: 0.0010\nEpoch 11/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9299 - loss: 0.2055\nEpoch 11: val_loss improved from 0.19699 to 0.18896, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9299 - loss: 0.2055 - val_accuracy: 0.9385 - val_loss: 0.1890 - learning_rate: 0.0010\nEpoch 12/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9338 - loss: 0.1947\nEpoch 12: val_loss improved from 0.18896 to 0.17104, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9338 - loss: 0.1947 - val_accuracy: 0.9458 - val_loss: 0.1710 - learning_rate: 0.0010\nEpoch 13/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9365 - loss: 0.1837\nEpoch 13: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9365 - loss: 0.1837 - val_accuracy: 0.9390 - val_loss: 0.1872 - learning_rate: 0.0010\nEpoch 14/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9385 - loss: 0.1795\nEpoch 14: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9385 - loss: 0.1795 - val_accuracy: 0.9418 - val_loss: 0.1903 - learning_rate: 0.0010\nEpoch 15/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9422 - loss: 0.1648\nEpoch 15: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9422 - loss: 0.1649 - val_accuracy: 0.9378 - val_loss: 0.1902 - learning_rate: 0.0010\nEpoch 16/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9444 - loss: 0.1640\nEpoch 16: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9444 - loss: 0.1640 - val_accuracy: 0.9388 - val_loss: 0.1907 - learning_rate: 0.0010\nEpoch 17/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9454 - loss: 0.1586\nEpoch 17: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9454 - loss: 0.1586 - val_accuracy: 0.9433 - val_loss: 0.1766 - learning_rate: 0.0010\nEpoch 18/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9470 - loss: 0.1501\nEpoch 18: val_loss did not improve from 0.17104\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9470 - loss: 0.1502 - val_accuracy: 0.9432 - val_loss: 0.1763 - learning_rate: 0.0010\nEpoch 19/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9474 - loss: 0.1532\nEpoch 19: val_loss did not improve from 0.17104\n\nEpoch 19: ReduceLROnPlateau reducing learning rate to 0.0001500000071246177.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9474 - loss: 0.1532 - val_accuracy: 0.9450 - val_loss: 0.1799 - learning_rate: 0.0010\nEpoch 20/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9568 - loss: 0.1249\nEpoch 20: val_loss improved from 0.17104 to 0.16480, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9568 - loss: 0.1248 - val_accuracy: 0.9495 - val_loss: 0.1648 - learning_rate: 1.5000e-04\nEpoch 21/120\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9631 - loss: 0.1059\nEpoch 21: val_loss improved from 0.16480 to 0.15933, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 24ms/step - accuracy: 0.9631 - loss: 0.1059 - val_accuracy: 0.9498 - val_loss: 0.1593 - learning_rate: 1.5000e-04\nEpoch 22/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9661 - loss: 0.0982\nEpoch 22: val_loss improved from 0.15933 to 0.15770, saving model to /kaggle/working/weights_CNN.keras\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9661 - loss: 0.0982 - val_accuracy: 0.9515 - val_loss: 0.1577 - learning_rate: 1.5000e-04\nEpoch 23/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9661 - loss: 0.0962\nEpoch 23: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9661 - loss: 0.0962 - val_accuracy: 0.9513 - val_loss: 0.1621 - learning_rate: 1.5000e-04\nEpoch 24/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9674 - loss: 0.0919\nEpoch 24: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9674 - loss: 0.0919 - val_accuracy: 0.9500 - val_loss: 0.1649 - learning_rate: 1.5000e-04\nEpoch 25/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9703 - loss: 0.0877\nEpoch 25: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9703 - loss: 0.0877 - val_accuracy: 0.9518 - val_loss: 0.1661 - learning_rate: 1.5000e-04\nEpoch 26/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9718 - loss: 0.0825\nEpoch 26: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9718 - loss: 0.0825 - val_accuracy: 0.9513 - val_loss: 0.1609 - learning_rate: 1.5000e-04\nEpoch 27/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9711 - loss: 0.0807\nEpoch 27: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9711 - loss: 0.0808 - val_accuracy: 0.9510 - val_loss: 0.1633 - learning_rate: 1.5000e-04\nEpoch 28/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9716 - loss: 0.0804\nEpoch 28: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9716 - loss: 0.0804 - val_accuracy: 0.9503 - val_loss: 0.1718 - learning_rate: 1.5000e-04\nEpoch 29/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9723 - loss: 0.0745\nEpoch 29: val_loss did not improve from 0.15770\n\nEpoch 29: ReduceLROnPlateau reducing learning rate to 2.2500001068692655e-05.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9723 - loss: 0.0746 - val_accuracy: 0.9505 - val_loss: 0.1651 - learning_rate: 1.5000e-04\nEpoch 30/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9729 - loss: 0.0770\nEpoch 30: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9729 - loss: 0.0769 - val_accuracy: 0.9498 - val_loss: 0.1659 - learning_rate: 2.2500e-05\nEpoch 31/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9733 - loss: 0.0742\nEpoch 31: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9733 - loss: 0.0742 - val_accuracy: 0.9518 - val_loss: 0.1664 - learning_rate: 2.2500e-05\nEpoch 32/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9738 - loss: 0.0712\nEpoch 32: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9738 - loss: 0.0712 - val_accuracy: 0.9515 - val_loss: 0.1670 - learning_rate: 2.2500e-05\nEpoch 33/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9756 - loss: 0.0698\nEpoch 33: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9756 - loss: 0.0698 - val_accuracy: 0.9518 - val_loss: 0.1670 - learning_rate: 2.2500e-05\nEpoch 34/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9736 - loss: 0.0728\nEpoch 34: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9736 - loss: 0.0728 - val_accuracy: 0.9528 - val_loss: 0.1695 - learning_rate: 2.2500e-05\nEpoch 35/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9760 - loss: 0.0681\nEpoch 35: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9760 - loss: 0.0681 - val_accuracy: 0.9523 - val_loss: 0.1694 - learning_rate: 2.2500e-05\nEpoch 36/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9754 - loss: 0.0694\nEpoch 36: val_loss did not improve from 0.15770\n\nEpoch 36: ReduceLROnPlateau reducing learning rate to 3.3750000511645338e-06.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9754 - loss: 0.0694 - val_accuracy: 0.9528 - val_loss: 0.1700 - learning_rate: 2.2500e-05\nEpoch 37/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9755 - loss: 0.0702\nEpoch 37: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9755 - loss: 0.0702 - val_accuracy: 0.9528 - val_loss: 0.1695 - learning_rate: 3.3750e-06\nEpoch 38/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9741 - loss: 0.0707\nEpoch 38: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9741 - loss: 0.0707 - val_accuracy: 0.9532 - val_loss: 0.1695 - learning_rate: 3.3750e-06\nEpoch 39/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9766 - loss: 0.0669\nEpoch 39: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9766 - loss: 0.0669 - val_accuracy: 0.9528 - val_loss: 0.1693 - learning_rate: 3.3750e-06\nEpoch 40/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9755 - loss: 0.0696\nEpoch 40: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9755 - loss: 0.0696 - val_accuracy: 0.9532 - val_loss: 0.1691 - learning_rate: 3.3750e-06\nEpoch 41/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9759 - loss: 0.0681\nEpoch 41: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9759 - loss: 0.0681 - val_accuracy: 0.9525 - val_loss: 0.1690 - learning_rate: 3.3750e-06\nEpoch 42/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9759 - loss: 0.0694\nEpoch 42: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9759 - loss: 0.0694 - val_accuracy: 0.9527 - val_loss: 0.1690 - learning_rate: 3.3750e-06\nEpoch 43/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9765 - loss: 0.0670\nEpoch 43: val_loss did not improve from 0.15770\n\nEpoch 43: ReduceLROnPlateau reducing learning rate to 5.062500008534698e-07.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9765 - loss: 0.0670 - val_accuracy: 0.9533 - val_loss: 0.1694 - learning_rate: 3.3750e-06\nEpoch 44/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9762 - loss: 0.0686\nEpoch 44: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9762 - loss: 0.0686 - val_accuracy: 0.9533 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 45/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9753 - loss: 0.0660\nEpoch 45: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9753 - loss: 0.0660 - val_accuracy: 0.9532 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 46/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9755 - loss: 0.0657\nEpoch 46: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9755 - loss: 0.0657 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 47/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9756 - loss: 0.0685\nEpoch 47: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9756 - loss: 0.0685 - val_accuracy: 0.9532 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 48/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9761 - loss: 0.0638\nEpoch 48: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9761 - loss: 0.0638 - val_accuracy: 0.9532 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 49/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9758 - loss: 0.0675\nEpoch 49: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9758 - loss: 0.0675 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 5.0625e-07\nEpoch 50/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9762 - loss: 0.0669\nEpoch 50: val_loss did not improve from 0.15770\n\nEpoch 50: ReduceLROnPlateau reducing learning rate to 7.59374984227179e-08.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9762 - loss: 0.0669 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 5.0625e-07\nEpoch 51/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9765 - loss: 0.0676\nEpoch 51: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9765 - loss: 0.0676 - val_accuracy: 0.9532 - val_loss: 0.1691 - learning_rate: 7.5937e-08\nEpoch 52/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9751 - loss: 0.0694\nEpoch 52: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9751 - loss: 0.0694 - val_accuracy: 0.9527 - val_loss: 0.1691 - learning_rate: 7.5937e-08\nEpoch 53/120\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9752 - loss: 0.0701\nEpoch 53: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9752 - loss: 0.0701 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 7.5937e-08\nEpoch 54/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9771 - loss: 0.0647\nEpoch 54: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9771 - loss: 0.0647 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 7.5937e-08\nEpoch 55/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9781 - loss: 0.0619\nEpoch 55: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9781 - loss: 0.0619 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 7.5937e-08\nEpoch 56/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9760 - loss: 0.0653\nEpoch 56: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9760 - loss: 0.0653 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 7.5937e-08\nEpoch 57/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9754 - loss: 0.0678\nEpoch 57: val_loss did not improve from 0.15770\n\nEpoch 57: ReduceLROnPlateau reducing learning rate to 1.1390624976570507e-08.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9754 - loss: 0.0678 - val_accuracy: 0.9532 - val_loss: 0.1693 - learning_rate: 7.5937e-08\nEpoch 58/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9760 - loss: 0.0648\nEpoch 58: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9760 - loss: 0.0648 - val_accuracy: 0.9528 - val_loss: 0.1693 - learning_rate: 1.1391e-08\nEpoch 59/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9762 - loss: 0.0684\nEpoch 59: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9762 - loss: 0.0684 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 1.1391e-08\nEpoch 60/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9750 - loss: 0.0688\nEpoch 60: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9750 - loss: 0.0688 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 1.1391e-08\nEpoch 61/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9776 - loss: 0.0622\nEpoch 61: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9776 - loss: 0.0622 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 1.1391e-08\nEpoch 62/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9740 - loss: 0.0743\nEpoch 62: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9740 - loss: 0.0743 - val_accuracy: 0.9532 - val_loss: 0.1692 - learning_rate: 1.1391e-08\nEpoch 63/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9757 - loss: 0.0679\nEpoch 63: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9757 - loss: 0.0679 - val_accuracy: 0.9532 - val_loss: 0.1691 - learning_rate: 1.1391e-08\nEpoch 64/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9743 - loss: 0.0707\nEpoch 64: val_loss did not improve from 0.15770\n\nEpoch 64: ReduceLROnPlateau reducing learning rate to 1.7085937997762811e-09.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9743 - loss: 0.0707 - val_accuracy: 0.9530 - val_loss: 0.1691 - learning_rate: 1.1391e-08\nEpoch 65/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9773 - loss: 0.0661\nEpoch 65: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9773 - loss: 0.0660 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 1.7086e-09\nEpoch 66/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9751 - loss: 0.0682\nEpoch 66: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9751 - loss: 0.0682 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 1.7086e-09\nEpoch 67/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9762 - loss: 0.0683\nEpoch 67: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9762 - loss: 0.0683 - val_accuracy: 0.9528 - val_loss: 0.1691 - learning_rate: 1.7086e-09\nEpoch 68/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9762 - loss: 0.0679\nEpoch 68: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9762 - loss: 0.0679 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 1.7086e-09\nEpoch 69/120\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9764 - loss: 0.0667\nEpoch 69: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9764 - loss: 0.0667 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 1.7086e-09\nEpoch 70/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9750 - loss: 0.0698\nEpoch 70: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9750 - loss: 0.0698 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 1.7086e-09\nEpoch 71/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9761 - loss: 0.0695\nEpoch 71: val_loss did not improve from 0.15770\n\nEpoch 71: ReduceLROnPlateau reducing learning rate to 2.5628907329711126e-10.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9761 - loss: 0.0695 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 1.7086e-09\nEpoch 72/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9757 - loss: 0.0677\nEpoch 72: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9757 - loss: 0.0677 - val_accuracy: 0.9530 - val_loss: 0.1693 - learning_rate: 2.5629e-10\nEpoch 73/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9752 - loss: 0.0717\nEpoch 73: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9752 - loss: 0.0717 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 2.5629e-10\nEpoch 74/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9773 - loss: 0.0632\nEpoch 74: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9773 - loss: 0.0632 - val_accuracy: 0.9527 - val_loss: 0.1693 - learning_rate: 2.5629e-10\nEpoch 75/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9743 - loss: 0.0708\nEpoch 75: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9743 - loss: 0.0708 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 2.5629e-10\nEpoch 76/120\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9765 - loss: 0.0679\nEpoch 76: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9765 - loss: 0.0679 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 2.5629e-10\nEpoch 77/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9750 - loss: 0.0682\nEpoch 77: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9750 - loss: 0.0682 - val_accuracy: 0.9532 - val_loss: 0.1691 - learning_rate: 2.5629e-10\nEpoch 78/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9754 - loss: 0.0700\nEpoch 78: val_loss did not improve from 0.15770\n\nEpoch 78: ReduceLROnPlateau reducing learning rate to 3.844336099456669e-11.\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9754 - loss: 0.0700 - val_accuracy: 0.9530 - val_loss: 0.1692 - learning_rate: 2.5629e-10\nEpoch 79/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9733 - loss: 0.0735\nEpoch 79: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9734 - loss: 0.0735 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 3.8443e-11\nEpoch 80/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9754 - loss: 0.0675\nEpoch 80: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9754 - loss: 0.0675 - val_accuracy: 0.9528 - val_loss: 0.1691 - learning_rate: 3.8443e-11\nEpoch 81/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9761 - loss: 0.0688\nEpoch 81: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9761 - loss: 0.0688 - val_accuracy: 0.9532 - val_loss: 0.1691 - learning_rate: 3.8443e-11\nEpoch 82/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9761 - loss: 0.0666\nEpoch 82: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9761 - loss: 0.0666 - val_accuracy: 0.9528 - val_loss: 0.1691 - learning_rate: 3.8443e-11\nEpoch 83/120\n\u001b[1m420/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9755 - loss: 0.0711\nEpoch 83: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9755 - loss: 0.0710 - val_accuracy: 0.9528 - val_loss: 0.1691 - learning_rate: 3.8443e-11\nEpoch 84/120\n\u001b[1m421/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9754 - loss: 0.0692\nEpoch 84: val_loss did not improve from 0.15770\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 23ms/step - accuracy: 0.9754 - loss: 0.0692 - val_accuracy: 0.9528 - val_loss: 0.1692 - learning_rate: 3.8443e-11\nEpoch 84: early stopping\nCNN weights saved in /kaggle/working/weights_CNN.keras\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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oNbt448/tqYpKysTn3rqKdHLy0t0dnYWR48eLWZkZMiXaarh6gCI96zl+fHHH8UePXqIGo1G7NKli/jhhx/aPG+xWMSFCxeKAQEBokajEe+8804xKSlJptw6Nr1eL86cOVNs166dqNVqxfbt24vz588XDQaDNU1rv1+CKF4xrSMRERGRA2AfICIiInI4DICIiIjI4TAAIiIiIofDAIiIiIgcDgMgIiIicjgMgIiIiMjhMAAiIiIih8MAiIioHrZv3w5BEGqsL0ZErRMDICIiInI4DICIiIjI4TAAIqJWwWKxICEhAZGRkdDpdOjduze++eYbANXNU5s2bUKvXr2g1Wpx880349ixYzbn+Pbbb9G9e3doNBpERETgrbfesnneYDDghRdeQFhYGDQaDTp27IjVq1fbpNm/fz/69esHZ2dnDBo0qMYK50TUOjAAIqJWISEhAZ999hlWrVqF48ePY/bs2XjkkUewY8cOa5rnnnsOb731Fv766y/4+flh5MiRqKioACAFLg899BDGjRuHo0ePYsmSJVi4cCE++eQT6/ETJ07EV199hXfeeQcnT57EBx98AFdXV5t8zJ8/H2+99Rb+/vtvqFQqTJ061S7XT0RNi4uhElGLZzAY4O3tja1bt2LgwIHW/Y8//jhKS0vxxBNP4Pbbb8e6deswduxYAMDly5cRGhqKTz75BA899BAmTJiAnJwc/Prrr9bjn3/+eWzatAnHjx/H6dOnERUVhS1btiA2NrZGHrZv347bb78dW7duxZ133gkA+Pnnn3HPPfegrKwMWq22md8FImpKrAEiohbv7NmzKC0txV133QVXV1fr9tlnnyE5Odma7srgyNvbG1FRUTh58iQA4OTJkxg8eLDNeQcPHowzZ87AbDbj0KFDUCqVuPXWW6+Zl169elkfBwUFAQCys7Nv+BqJyL5UcmeAiOh6iouLAQCbNm1CSEiIzXMajcYmCGosnU5Xr3ROTk7Wx4IgAJD6JxFR68IaICJq8bp16waNRoOUlBR07NjRZgsLC7Om+/PPP62P8/Pzcfr0aXTt2hUA0LVrV+zatcvmvLt27ULnzp2hVCrRs2dPWCwWmz5FRNR2sQaIiFo8Nzc3zJkzB7Nnz4bFYsGQIUNQWFiIXbt2wd3dHeHh4QCAl19+GT4+PggICMD8+fPh6+uL++67DwDwz3/+E/3798fSpUsxduxY7NmzB++++y7ee+89AEBERAQmTZqEqVOn4p133kHv3r1x8eJFZGdn46GHHpLr0omomTAAIqJWYenSpfDz80NCQgLOnTsHT09P9O3bFy+++KK1Ceq1117DzJkzcebMGfTp0wc//vgj1Go1AKBv3774+uuvsWjRIixduhRBQUF4+eWXMXnyZOtrvP/++3jxxRfx1FNPIS8vD+3atcOLL74ox+USUTPjKDAiavWqRmjl5+fD09NT7uwQUSvAPkBERETkcBgAERERkcNhExgRERE5HNYAERERkcNhAEREREQOhwEQERERORwGQERERORwGAARERGRw2EARERERA6HARARERE5HAZARERE5HAYABEREZHD+f/Uj27rDhvsUQAAAABJRU5ErkJggg=="},"metadata":{}}],"execution_count":87},{"cell_type":"code","source":"from keras.models import load_model\n\n## LOAD DATA\ndata = np.load('/kaggle/input/mnist-corrnoise-npz/MNIST_CorrNoise.npz')\n\nx_test = data['x_test']\ny_test = data['y_test']\n\nnum_cls = len(np.unique(y_test))\nprint('Number of classes: ' + str(num_cls))\n\n# RESHAPE and standarize\nx_test = np.expand_dims(x_test/255,axis=3)\n\nprint('Shape of x_train: '+str(x_test.shape)+'\\n')\n\n## Define model parameters\nmodel_name='CNN' # To compare models, you can give them different names\npweight='/kaggle/working/weights_' + model_name  + '.keras'\n\nmodel = load_model(pweight)\n# Instead of predict_classes, use predict and argmax\ny_pred_probs = model.predict(x_test)  # Get predicted probabilities\ny_pred = np.argmax(y_pred_probs, axis=-1) # Get class with highest probability\n\nAcc_pred = sum(y_pred == y_test)/len(y_test)\n\nprint('Accuracy in test set is: '+str(Acc_pred))\n","metadata":{"execution":{"iopub.status.busy":"2024-11-22T01:04:41.706480Z","iopub.execute_input":"2024-11-22T01:04:41.706863Z","iopub.status.idle":"2024-11-22T01:04:43.512161Z","shell.execute_reply.started":"2024-11-22T01:04:41.706829Z","shell.execute_reply":"2024-11-22T01:04:43.511328Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Number of classes: 10\nShape of x_train: (10000, 28, 28, 1)\n\n\u001b[1m313/313\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\nAccuracy in test set is: 0.9466\n","output_type":"stream"}],"execution_count":90}]}